const uint8_t Inversionz10pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0xFF, 0xFF, 0xEF, 0xFD, 0xFF, 0xBF, 0xF7, 0xFF, 0xFF, 0xDF,
  0xFB, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xD7, 0xFA, 0xFF, 0x5F,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xD7, 0xE0, 0x7C, 0x0F, 0xEB, 0xF0, 0x3E, 0x07, 0xF5, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0x7F, 0x01, 0xE0, 0x3C, 0xBF, 0x80, 0xFE, 0x9E, 0x03,
  0xC0, 0x7F, 0x7F, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0x79, 0xFE, 0x7F, 0x9F,
  0xF7, 0xFD, 0xFF, 0x3F, 0xCF, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xEF, 0xFD, 0xFF, 0xBF, 0x80, 0xFE, 0xFF, 0xDF, 0xFB, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0xEF, 0xFD, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xF8, 0x0F, 0x7F, 0xEF, 0xFD, 0xFF,
  0xBF, 0xF7, 0xFE, 0xFF, 0xDF, 0xF8, 0x0F, 0xFF, 0x80, 0xFF, 0xF8, 0x0F,
  0xFD, 0xFF, 0xBF, 0xF7, 0xFE, 0xFF, 0xDF, 0xFB, 0xFF, 0x78, 0x0F, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0xEF, 0xF8, 0xFF, 0x1F, 0xF7, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xEF, 0xFD, 0xFF, 0xBF,
  0x80, 0xFE, 0xFF, 0xDF, 0xFB, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xDF, 0xFB, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xDF, 0xFB, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xFB, 0xFE, 0xFF, 0x9F, 0xF7, 0xFD, 0xFF, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3D, 0xE7, 0xBC, 0xF7, 0x9E, 0x03,
  0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xEF, 0xFD, 0xFF, 0xBF,
  0xF7, 0xFE, 0xFF, 0xDF, 0xFB, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0x01, 0xE0, 0x3F, 0xF7, 0x80, 0xF7, 0xFE, 0x03, 0xC0, 0x7F, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3F, 0xF7, 0x80, 0xFF, 0xDF, 0xFB,
  0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0x79, 0xEF, 0x3D, 0xE7,
  0x80, 0xFF, 0x9F, 0xF3, 0xFE, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0x01, 0xE0, 0x3D, 0xFF, 0x80, 0xFF, 0xDE, 0x03, 0xC0, 0x7F, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3D, 0xFF, 0x80, 0xF7, 0x9E, 0xF3,
  0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0x03, 0xFC, 0xFF, 0x9F,
  0xE7, 0xFD, 0xFF, 0x3F, 0xCF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0x01, 0xE0, 0x3D, 0xE7, 0x80, 0xF7, 0x9E, 0xF3, 0xC0, 0x7F, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xEF, 0x3D, 0xE7, 0x80, 0xFF, 0x9E, 0x03,
  0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xBF,
  0xFF, 0xFE, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFD, 0xFF, 0xBF, 0xFF, 0xFE, 0xFF, 0xDF, 0xFB, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3E, 0x3F, 0xBF, 0xF8, 0xFF, 0xE3,
  0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x3C, 0x07,
  0xFF, 0xF0, 0x1E, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xFF, 0xE3, 0xFF, 0x8F, 0xFE, 0xFE, 0x3E, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3F, 0xF7, 0xF0, 0xFF, 0xFF, 0xDF,
  0xFB, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xE3, 0xF7, 0xBE, 0xD7,
  0xBE, 0xF4, 0xBE, 0xFF, 0xE3, 0xFF, 0xFF, 0xFF, 0x80, 0x30, 0xC3, 0x1E,
  0x4B, 0x3D, 0xC0, 0xFE, 0x18, 0x6F, 0x86, 0x1F, 0xC0, 0xFE, 0x08, 0x20,
  0x82, 0x0F, 0xC0, 0xFE, 0x18, 0x61, 0x86, 0x1F, 0xC0, 0xFE, 0x08, 0x3E,
  0x82, 0x0F, 0xC0, 0xFE, 0x0F, 0xFF, 0x82, 0x08, 0x00, 0xFE, 0x08, 0x23,
  0x86, 0x1F, 0xC0, 0x86, 0x18, 0x7F, 0x86, 0x18, 0x40, 0xFE, 0x04, 0x10,
  0x41, 0x06, 0x1F, 0xC0, 0x8A, 0xCE, 0x30, 0xE2, 0xC8, 0x80, 0x82, 0x08,
  0x20, 0x82, 0x1F, 0xC0, 0xFF, 0x26, 0x4C, 0x99, 0x32, 0x64, 0x80, 0x87,
  0x1E, 0x6D, 0x9E, 0x38, 0x40, 0xFE, 0x18, 0x61, 0x86, 0x1F, 0xC0, 0xFE,
  0x1F, 0xE0, 0x82, 0x08, 0x00, 0xFE, 0x18, 0x61, 0x86, 0x7F, 0xC0, 0xFE,
  0x18, 0x7F, 0x92, 0x68, 0xC0, 0xFE, 0x08, 0x20, 0xFC, 0x1F, 0xC0, 0xFC,
  0x41, 0x04, 0x10, 0x41, 0x00, 0x86, 0x18, 0x61, 0x86, 0x1F, 0xC0, 0xDF,
  0x34, 0x9E, 0x38, 0xC3, 0x00, 0x92, 0x59, 0x65, 0x96, 0x5F, 0xC0, 0x44,
  0xD8, 0xE0, 0x83, 0x8D, 0x91, 0x00, 0x8E, 0xDC, 0x42, 0x10, 0x80, 0xFC,
  0x61, 0x8C, 0x21, 0x9F, 0xC0, 0xFE, 0x08, 0x20, 0x82, 0x08, 0x3F, 0xFF,
  0xFF, 0xFF, 0xBF, 0xF3, 0xFF, 0x7F, 0xF7, 0xFE, 0x7F, 0xEF, 0xFE, 0xFF,
  0xFF, 0xFF, 0x80, 0xFC, 0x10, 0x41, 0x04, 0x10, 0x7F, 0xFF, 0xFF, 0x7F,
  0xD7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xC0, 0x78, 0x0F, 0xFF, 0x80, 0xFF, 0xFE, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xE7, 0xFC, 0xFF, 0x1F, 0xE9, 0xFD, 0xBF, 0x37, 0xEC, 0x7F, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3C, 0xF7, 0x90, 0xF3, 0xDE, 0x03,
  0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3D, 0xFF,
  0xBF, 0xF7, 0xFE, 0x03, 0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0x07, 0xE0, 0x7D, 0xE7, 0xBC, 0xF7, 0x9E, 0x07, 0xC1, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3D, 0xFF, 0x81, 0xF7, 0xFE, 0x03,
  0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3D, 0xFF,
  0x80, 0xF7, 0xFE, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0x01, 0xE0, 0x3C, 0xFF, 0x98, 0xF3, 0xDE, 0x03, 0xC0, 0x7F, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x79, 0xEF, 0x3D, 0xE7, 0x80, 0xF7, 0x9E, 0xF3,
  0xDE, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xEF, 0xFD, 0xFF, 0xBF,
  0xF7, 0xFE, 0xFF, 0xDF, 0xFB, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xF9, 0xFF, 0x3F, 0xE7, 0xFC, 0xF7, 0x9E, 0xF3, 0xC0, 0x7F, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x33, 0xE4, 0xFC, 0x3F, 0x8F, 0xF0, 0xFE, 0x4F,
  0xCC, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0x7F, 0xEF, 0xFD, 0xFF,
  0xBF, 0xF7, 0x9E, 0xF3, 0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0x01, 0xE5, 0xBC, 0xB7, 0x96, 0xF2, 0xDE, 0x5B, 0xCB, 0x7F, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x79, 0xE7, 0x3C, 0x67, 0xA4, 0xF6, 0x1E, 0xE3,
  0xDE, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3D, 0xE7,
  0xBC, 0xF7, 0x9E, 0x03, 0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0x01, 0xE0, 0x3D, 0xE7, 0x80, 0xF7, 0xFE, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3D, 0xE7, 0xBC, 0xF6, 0x1E, 0x03,
  0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3D, 0xE7,
  0x80, 0xF4, 0xFE, 0xCF, 0xDC, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0x01, 0xE0, 0x3D, 0xFF, 0x80, 0xFF, 0xDE, 0x03, 0xC0, 0x7F, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xFD, 0xFF, 0xBF, 0xF7, 0xFE, 0xFF, 0xDF,
  0xFB, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0x79, 0xEF, 0x3D, 0xE7,
  0xBC, 0xF7, 0x9E, 0xF3, 0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xB1, 0xF3, 0x7F, 0x6F, 0xE9, 0xFC, 0x7F, 0xCF, 0xF9, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x69, 0xED, 0x3D, 0xA7, 0xB4, 0xF6, 0x9E, 0xD3,
  0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xBB, 0xF2, 0x7F, 0x1F,
  0xF7, 0xFC, 0x7F, 0x27, 0xEE, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF,
  0xBB, 0xF2, 0x7F, 0x1F, 0xF7, 0xFE, 0xFF, 0xDF, 0xFB, 0xFF, 0xFF, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x7F, 0xDF, 0xF7, 0xFD, 0xDF, 0x03,
  0xC0, 0x7F, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0x7F,
  0xEF, 0xFD, 0xFF, 0xBF, 0xF7, 0xFE, 0xFF, 0xDF, 0xFB, 0xFF, 0x7F, 0xFF,
  0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80 };

const GFXglyph Inversionz10pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,  12,    0,    0 },   // 0x20 ' '
  {     1,  11,  11,  12,    0,  -10 },   // 0x21 '!'
  {    17,  11,  11,  12,    0,  -10 },   // 0x22 '"'
  {    33,  11,  11,  12,    0,  -10 },   // 0x23 '#'
  {    49,  11,  11,  12,    0,  -10 },   // 0x24 '$'
  {    65,  11,  11,  12,    0,  -10 },   // 0x25 '%'
  {    81,  11,  11,  12,    0,  -10 },   // 0x26 '&'
  {    97,  11,  11,  12,    0,  -10 },   // 0x27 '''
  {   113,  11,  11,  12,    0,  -10 },   // 0x28 '('
  {   129,  11,  11,  12,    0,  -10 },   // 0x29 ')'
  {   145,  11,  11,  12,    0,  -10 },   // 0x2A '*'
  {   161,  11,  11,  12,    0,  -10 },   // 0x2B '+'
  {   177,  11,  11,  12,    0,  -10 },   // 0x2C ','
  {   193,  11,  11,  12,    0,  -10 },   // 0x2D '-'
  {   209,  11,  11,  12,    0,  -10 },   // 0x2E '.'
  {   225,  11,  11,  12,    0,  -10 },   // 0x2F '/'
  {   241,  11,  11,  12,    0,  -10 },   // 0x30 '0'
  {   257,  11,  11,  12,    0,  -10 },   // 0x31 '1'
  {   273,  11,  11,  12,    0,  -10 },   // 0x32 '2'
  {   289,  11,  11,  12,    0,  -10 },   // 0x33 '3'
  {   305,  11,  11,  12,    0,  -10 },   // 0x34 '4'
  {   321,  11,  11,  12,    0,  -10 },   // 0x35 '5'
  {   337,  11,  11,  12,    0,  -10 },   // 0x36 '6'
  {   353,  11,  11,  12,    0,  -10 },   // 0x37 '7'
  {   369,  11,  11,  12,    0,  -10 },   // 0x38 '8'
  {   385,  11,  11,  12,    0,  -10 },   // 0x39 '9'
  {   401,  11,  11,  12,    0,  -10 },   // 0x3A ':'
  {   417,  11,  11,  12,    0,  -10 },   // 0x3B ';'
  {   433,  11,  11,  12,    0,  -10 },   // 0x3C '<'
  {   449,  11,  11,  12,    0,  -10 },   // 0x3D '='
  {   465,  11,  11,  12,    0,  -10 },   // 0x3E '>'
  {   481,  11,  11,  12,    0,  -10 },   // 0x3F '?'
  {   497,  11,  11,  12,    0,  -10 },   // 0x40 '@'
  {   513,   6,   7,  12,    3,   -8 },   // 0x41 'A'
  {   519,   6,   7,  12,    2,   -8 },   // 0x42 'B'
  {   525,   6,   7,  12,    2,   -8 },   // 0x43 'C'
  {   531,   6,   7,  12,    2,   -8 },   // 0x44 'D'
  {   537,   6,   7,  12,    2,   -8 },   // 0x45 'E'
  {   543,   6,   7,  12,    2,   -8 },   // 0x46 'F'
  {   549,   6,   7,  12,    2,   -8 },   // 0x47 'G'
  {   555,   6,   7,  12,    2,   -8 },   // 0x48 'H'
  {   561,   1,   7,  12,    5,   -8 },   // 0x49 'I'
  {   562,   6,   7,  12,    2,   -8 },   // 0x4A 'J'
  {   568,   6,   7,  12,    2,   -8 },   // 0x4B 'K'
  {   574,   6,   7,  12,    2,   -8 },   // 0x4C 'L'
  {   580,   7,   7,  12,    2,   -8 },   // 0x4D 'M'
  {   587,   6,   7,  12,    2,   -8 },   // 0x4E 'N'
  {   593,   6,   7,  12,    2,   -8 },   // 0x4F 'O'
  {   599,   6,   7,  12,    2,   -8 },   // 0x50 'P'
  {   605,   6,   7,  12,    2,   -8 },   // 0x51 'Q'
  {   611,   6,   7,  12,    2,   -8 },   // 0x52 'R'
  {   617,   6,   7,  12,    2,   -8 },   // 0x53 'S'
  {   623,   6,   7,  12,    2,   -8 },   // 0x54 'T'
  {   629,   6,   7,  12,    2,   -8 },   // 0x55 'U'
  {   635,   6,   7,  12,    3,   -8 },   // 0x56 'V'
  {   641,   6,   7,  12,    2,   -8 },   // 0x57 'W'
  {   647,   7,   7,  12,    2,   -8 },   // 0x58 'X'
  {   654,   5,   7,  12,    3,   -8 },   // 0x59 'Y'
  {   659,   6,   7,  12,    2,   -8 },   // 0x5A 'Z'
  {   665,   6,   8,  12,    2,   -8 },   // 0x5B '['
  {   671,  11,  11,  12,    0,  -10 },   // 0x5C '\'
  {   687,   6,   8,  12,    2,   -8 },   // 0x5D ']'
  {   693,  11,  11,  12,    0,  -10 },   // 0x5E '^'
  {   709,  11,  11,  12,    0,  -10 },   // 0x5F '_'
  {   725,  11,  11,  11,    0,  -10 },   // 0x60 '`'
  {   741,  11,  11,  12,    0,  -10 },   // 0x61 'a'
  {   757,  11,  11,  12,    0,  -10 },   // 0x62 'b'
  {   773,  11,  11,  12,    0,  -10 },   // 0x63 'c'
  {   789,  11,  11,  12,    0,  -10 },   // 0x64 'd'
  {   805,  11,  11,  12,    0,  -10 },   // 0x65 'e'
  {   821,  11,  11,  12,    0,  -10 },   // 0x66 'f'
  {   837,  11,  11,  12,    0,  -10 },   // 0x67 'g'
  {   853,  11,  11,  12,    0,  -10 },   // 0x68 'h'
  {   869,  11,  11,  12,    0,  -10 },   // 0x69 'i'
  {   885,  11,  11,  12,    0,  -10 },   // 0x6A 'j'
  {   901,  11,  11,  12,    0,  -10 },   // 0x6B 'k'
  {   917,  11,  11,  12,    0,  -10 },   // 0x6C 'l'
  {   933,  11,  11,  12,    0,  -10 },   // 0x6D 'm'
  {   949,  11,  11,  12,    0,  -10 },   // 0x6E 'n'
  {   965,  11,  11,  12,    0,  -10 },   // 0x6F 'o'
  {   981,  11,  11,  12,    0,  -10 },   // 0x70 'p'
  {   997,  11,  11,  12,    0,  -10 },   // 0x71 'q'
  {  1013,  11,  11,  12,    0,  -10 },   // 0x72 'r'
  {  1029,  11,  11,  12,    0,  -10 },   // 0x73 's'
  {  1045,  11,  11,  12,    0,  -10 },   // 0x74 't'
  {  1061,  11,  11,  12,    0,  -10 },   // 0x75 'u'
  {  1077,  11,  11,  12,    0,  -10 },   // 0x76 'v'
  {  1093,  11,  11,  12,    0,  -10 },   // 0x77 'w'
  {  1109,  11,  11,  12,    0,  -10 },   // 0x78 'x'
  {  1125,  11,  11,  12,    0,  -10 },   // 0x79 'y'
  {  1141,  11,  11,  12,    0,  -10 },   // 0x7A 'z'
  {  1157,  11,  11,  12,    0,  -10 },   // 0x7B '{'
  {  1173,  11,  11,  12,    0,  -10 },   // 0x7C '|'
  {  1189,  11,  11,  12,    0,  -10 },   // 0x7D '}'
  {  1205,  11,  11,  12,    0,  -10 } }; // 0x7E '~'

const GFXfont Inversionz10pt7b PROGMEM = {
  (uint8_t  *)Inversionz10pt7bBitmaps,
  (GFXglyph *)Inversionz10pt7bGlyphs,
  0x20, 0x7E, 16 };

// Approx. 1893 bytes
